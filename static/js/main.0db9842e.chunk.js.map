{"version":3,"sources":["Components/Header.js","Components/SearchResults.js","Components/Nominated.js","Components/firebase.js","Components/Save.js","Components/Main.js","Components/Nominations.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","SearchResults","props","nominatedPlot","nominated","map","nominatedFilm","Plot","Title","includes","searched","src","Poster","alt","Year","disabled","onClick","setNominated","concat","Swal","fire","title","text","confirmButtonText","Nominated","removeNomination","e","index","target","getAttribute","newArray","splice","item","key","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Save","length","dbRef","database","ref","movie","push","then","window","location","reload","Main","useState","setMovie","setQuery","inputValue","setInputValue","to","class","id","action","htmlFor","onChange","event","value","query","fetch","response","json","res","performSearch","type","name","placeholder","Nominations","savedNominations","setSavedNominations","mountedRef","useRef","useEffect","on","newState","data","val","current","Footer","href","rel","aria-label","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"2OAYeA,MAVf,WACE,OACI,gCACE,yBAAKC,UAAU,WACb,+C,wBC2DKC,MA9Df,SAAuBC,GAGrB,IAWIC,EAAgBD,EAAME,UAAUC,KAAI,SAACC,GACvC,OAAOA,EAAcC,QAIvB,OAAKL,EAAMM,MAIAL,EAAcM,SAASP,EAAMK,MAEpC,oCACE,wBAAIP,UAAU,gBACZ,iDAAsB,8BAAOE,EAAMQ,WACnC,yBAAKV,UAAU,gBACb,yBAAKW,IAAKT,EAAMU,OAAQC,IAAKX,EAAMM,SAErC,yBAAKR,UAAU,aACb,2BAAG,0BAAMA,UAAU,QAAhB,SAAH,KAAyCE,EAAMM,OAC/C,2BAAG,0BAAMR,UAAU,QAAhB,QAAH,KAAwCE,EAAMY,MAC9C,2BAAG,0BAAMd,UAAU,QAAhB,QAAH,KAAwCE,EAAMK,OAEhD,4BAAQQ,UAAU,EAAMf,UAAU,qBAAlC,eAQJ,oCACE,wBAAIA,UAAU,gBACZ,iDAAsB,8BAAOE,EAAMQ,WACnC,yBAAKV,UAAU,gBACb,yBAAKW,IAAKT,EAAMU,OAAQC,IAAKX,EAAMM,SAErC,yBAAKR,UAAU,aACb,2BAAG,0BAAMA,UAAU,QAAhB,SAAH,KAAyCE,EAAMM,OAC/C,2BAAG,0BAAMR,UAAU,QAAhB,QAAH,KAAwCE,EAAMY,MAC9C,2BAAG,0BAAMd,UAAU,QAAhB,QAAH,KAAwCE,EAAMK,OAEhD,4BAAQS,QApDI,WAClBd,EAAMe,aAAaf,EAAME,UAAUc,OAAOhB,IAE1CiB,IAAKC,KAAK,CACRC,MAAO,aACPC,KAAM,kGACNC,kBAAmB,QA8CevB,UAAU,YAAxC,eAnCC,M,QCeIwB,MApCf,YAAiD,IAA5BpB,EAA2B,EAA3BA,UAAWa,EAAgB,EAAhBA,aAGxBQ,EAAmB,SAACC,GACxB,IAAIC,EAAQD,EAAEE,OAAOC,aAAa,SAClC,GAAIF,GAAS,EAAG,CACd,IAAIG,EAAQ,YAAO1B,GACnB0B,EAASC,OAAOJ,EAAO,GACvBV,EAAaa,KAKjB,OAAK1B,EAIIA,EAAUC,KAAI,SAAC2B,EAAML,GAC1B,OACE,wBAAIM,IAAKN,EAAO3B,UAAU,SACxB,2CAAiB2B,EAAQ,EAAzB,KACA,yBAAK3B,UAAU,gBACb,yBAAKW,IAAKqB,EAAKpB,OAAQC,IAAKmB,EAAKxB,SAEnC,yBAAKR,UAAU,aACb,2BAAG,0BAAMA,UAAU,QAAhB,SAAH,KAAyCgC,EAAKxB,OAC9C,2BAAG,0BAAMR,UAAU,QAAhB,QAAH,KAAwCgC,EAAKlB,MAC7C,2BAAG,0BAAMd,UAAU,QAAhB,QAAH,KAAwCgC,EAAKzB,OAE/C,4BAAQS,QAASS,EAAkBE,MAAOA,EAAO3B,UAAU,YAA3D,yBAfC,M,8BCHXkC,IAASC,cATY,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAKMR,QAAf,ECsBeS,MAlCf,YAA4C,IAA5BvC,EAA2B,EAA3BA,UAAWa,EAAgB,EAAhBA,aAyBzB,OAAKb,EAAUwC,OAIX,4BAAQ5B,QA1BY,WACtB,IAAM6B,EAAQX,EAASY,WAAWC,MAClC3C,EAAUC,KAAI,SAAC2C,GACb,OAAOH,EAAMI,KAAK,CAChBrC,OAAQoC,EAAMpC,OACdJ,MAAOwC,EAAMxC,MACbM,KAAMkC,EAAMlC,KACZP,KAAMyC,EAAMzC,UAGhBU,EAAa,IAEbE,IAAKC,KAAK,CACRC,MAAO,qBACPC,KAAM,wDACNC,kBAAmB,OAClB2B,MAAK,WACNC,OAAOC,SAASC,cAShB,qBAHK,MCsDIC,MA9Ef,WAAkB,IAAD,EACWC,mBAAS,IADpB,mBACRP,EADQ,KACDQ,EADC,OAEcD,mBAAS,IAFvB,mBAER7C,EAFQ,KAEE+C,EAFF,OAGqBF,mBAAS,IAH9B,mBAGRG,EAHQ,KAGIC,EAHJ,OAImBJ,mBAAS,IAJ5B,mBAIRnD,EAJQ,KAIGa,EAJH,KAqBf,OAAyB,IAArBb,EAAUwC,OAEV,8BACE,yBAAK5C,UAAU,WACb,yBAAKA,UAAU,iBACb,yKAEF,wBAAIA,UAAU,WAAd,iCACA,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CAAMI,UAAWA,EAAWa,aAAcA,KAE5C,kBAAC,IAAD,CAAM2C,GAAG,eAAe5D,UAAU,QAAlC,iBAAuD,8BAAM,uBAAG6D,MAAM,yBACtE,wBAAI7D,UAAU,cAAc8D,GAAG,eAE7B,kBAAC,EAAD,CAAW1D,UAAWA,EAAWa,aAAcA,KAEjD,yBAAKjB,UAAU,iBACb,kBAAC,EAAD,CAAMI,UAAWA,EAAWa,aAAcA,OAQhD,8BACE,yBAAKjB,UAAU,WACb,yBAAKA,UAAU,iBACb,yKAEF,kBAAC,IAAD,CAAM4D,GAAG,eAAe5D,UAAU,QAAlC,iBAAuD,8BAAM,uBAAGA,UAAU,yBAC1E,yBAAKA,UAAU,iBACf,0BAAM+D,OAAO,KACX,2BAAOC,QAAQ,aAAahE,UAAU,WAAtC,gBACA,2BAAOiE,SAzCI,SAACC,GACpBT,EAASS,EAAMtC,OAAOuC,OACtBR,EAAcO,EAAMtC,OAAOuC,OATP,WAA4B,IAA3BC,EAA0B,iEAAf1D,GAChC2D,MAAM,yCAAD,OAA0CD,EAA1C,qBACFlB,MAAK,SAAAoB,GAAQ,OAAIA,EAASC,UAC1BrB,MAAK,SAAAsB,GAAG,OAAIhB,EAASgB,MAOxBC,CAAcP,EAAMtC,OAAOuC,QAsCYO,KAAK,OAAOC,KAAK,aAAa3E,UAAU,aAAa8D,GAAG,aAAac,YAAY,yBAGlH,wBAAI5E,UAAU,UAAU8D,GAAG,WAEzB,kBAAC,EAAD,CAAelD,OAAQoC,EAAMpC,OAAQJ,MAAOwC,EAAMxC,MAAOM,KAAMkC,EAAMlC,KAAMP,KAAMyC,EAAMzC,KAAMmD,WAAYA,EAAYtD,UAAWA,EAAWa,aAAcA,EAAcP,SAAUA,KAEnL,yBAAKV,UAAU,iBACb,kBAAC,EAAD,CAAMI,UAAWA,EAAWa,aAAcA,KAE5C,wBAAIjB,UAAU,cAAc8D,GAAG,eAE7B,kBAAC,EAAD,CAAW1D,UAAWA,EAAWa,aAAcA,KAEjD,yBAAKjB,UAAU,iBACb,kBAAC,EAAD,CAAMI,UAAWA,EAAWa,aAAcA,QCtBvC4D,MAlDf,WAAwB,IAAD,EAE2BtB,mBAAS,IAFpC,mBAEduB,EAFc,KAEIC,EAFJ,KAGfC,EAAaC,kBAAO,GAiB1B,OAdAC,qBAAU,WACMhD,EAASY,WAAWC,MAC1BoC,GAAG,SAAS,SAACb,GACjB,IAAMc,EAAW,GACXC,EAAOf,EAASgB,MACtB,IAAK,IAAIrD,KAAOoD,EAAM,CACpB,IAAKL,EAAWO,QAAS,OAAO,KAChCH,EAASnC,KAAKoC,EAAKpD,IAErB8C,EAAoBK,GACpBJ,EAAWO,SAAU,OAExB,IAGD,oCACE,8BACE,yBAAKvF,UAAU,WACb,kBAAC,IAAD,CAAM4D,GAAG,YAAY5D,UAAU,SAAQ,8BAAM,uBAAGA,UAAU,uBAA1D,SACA,wBAAIA,UAAU,iBAAd,mBACA,wBAAIA,UAAU,eAEX8E,EAAiBzE,KAAI,SAAC2C,EAAOrB,GAC9B,OACE,wBAAIM,IAAKN,EAAO3B,UAAU,SACxB,yBAAKA,UAAU,gBACb,yBAAKW,IAAKqC,EAAMpC,OAAQC,IAAKmC,EAAMxC,SAErC,yBAAKR,UAAU,aACb,2BAAG,0BAAMA,UAAU,QAAhB,SAAH,KAAyCgD,EAAMxC,OAC/C,2BAAG,0BAAMR,UAAU,QAAhB,QAAH,KAAwCgD,EAAMlC,MAC9C,2BAAG,0BAAMd,UAAU,QAAhB,QAAH,KAAwCgD,EAAMzC,YAMtD,kBAAC,IAAD,CAAMqD,GAAG,YAAY5D,UAAU,SAAQ,8BAAM,uBAAGA,UAAU,uBAA1D,aClCKwF,MAXf,WACE,OACI,gCACE,yBAAKxF,UAAU,WACf,2BAAG,uBAAGyF,KAAK,gCAAgC7D,OAAO,SAAS8D,IAAI,uBAA5D,qBAAH,IAA2G,uBAAG1F,UAAU,mBAAmB2F,aAAW,cAAtJ,SACA,gDAAqB,uBAAGF,KAAK,0BAA0B7D,OAAO,SAAS8D,IAAI,uBAAtD,gB,OCcdE,MAbf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAWzC,IACzC,kBAAC,IAAD,CAAOwC,KAAK,eAAeC,UAAWlB,KAExC,kBAAC,EAAD,QCJcmB,QACW,cAA7B7C,OAAOC,SAAS6C,UAEe,UAA7B9C,OAAOC,SAAS6C,UAEhB9C,OAAOC,SAAS6C,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvD,MAAK,SAAAwD,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0db9842e.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n  return (\n      <header>\n        <div className=\"wrapper\">\n          <h1>The Shoppies</h1>\n        </div>\n      </header>\n  );\n}\n\nexport default Header;","import React from \"react\";\nimport Swal from 'sweetalert2';\n\nfunction SearchResults(props) {\n\n  // Nominate a movie from search results\n  const handleClick = () => {\n    props.setNominated(props.nominated.concat(props));\n    // Sweet alert\n    Swal.fire({\n      title: 'Nominated!',\n      text: \"You can nominate up to 5 movies. Once you're ready, save them to the official list of nominees!\",\n      confirmButtonText: 'Ok',\n    })\n  }\n\n  // The plot of each nominated movie\n  let nominatedPlot = props.nominated.map((nominatedFilm) => {\n    return nominatedFilm.Plot;\n  })\n\n  // If nothing is searched, return nothing\n  if (!props.Title) {\n    return null;\n\n    // If searched movie has already been nominated, disable the Nominate button\n  } else if (nominatedPlot.includes(props.Plot)) {\n    return (\n      <>\n        <li className=\"searchResult\">\n          <h3>Search result for <span>{props.searched}</span></h3>\n          <div className=\"imgContainer\">\n            <img src={props.Poster} alt={props.Title}/>\n          </div>\n          <div className=\"movieText\">\n            <p><span className=\"info\">Title</span>: {props.Title}</p>\n            <p><span className=\"info\">Year</span>: {props.Year}</p>\n            <p><span className=\"info\">Plot</span>: {props.Plot}</p>\n          </div>\n          <button disabled={true} className=\"nominate disabled\">Nominate!</button>\n        </li>\n      </>\n    );\n\n    // If movie is searched and has not been nominated, display in search results and allow user to nominate it\n  } else {\n    return (\n      <>\n        <li className=\"searchResult\">\n          <h3>Search result for <span>{props.searched}</span></h3>\n          <div className=\"imgContainer\">\n            <img src={props.Poster} alt={props.Title}/>\n          </div>\n          <div className=\"movieText\">\n            <p><span className=\"info\">Title</span>: {props.Title}</p>\n            <p><span className=\"info\">Year</span>: {props.Year}</p>\n            <p><span className=\"info\">Plot</span>: {props.Plot}</p>\n          </div>\n          <button onClick={handleClick} className=\"nominate\">Nominate!</button>\n        </li>\n      </>\n    );\n  }\n}\n\nexport default SearchResults;","import React from \"react\";\n\nfunction Nominated({ nominated, setNominated }) {\n\n  // Remove nomination from list when Remove button is clicked\n  const removeNomination = (e) => {\n    let index = e.target.getAttribute(\"index\");\n    if (index > -1) {\n      let newArray = [...nominated];\n      newArray.splice(index, 1);\n      setNominated(newArray);\n    }\n  };\n\n  // If user has not nominated any movies, return nothing for this component\n  if (!nominated) {\n    return null;\n    // Display each movie the user nominates\n  } else {\n    return nominated.map((item, index) => {\n      return (\n        <li key={index} className=\"movie\">\n          <h3>Nomination #{index + 1}:</h3>\n          <div className=\"imgContainer\">\n            <img src={item.Poster} alt={item.Title} />\n          </div>\n          <div className=\"movieText\">\n            <p><span className=\"info\">Title</span>: {item.Title}</p>\n            <p><span className=\"info\">Year</span>: {item.Year}</p>\n            <p><span className=\"info\">Plot</span>: {item.Plot}</p>\n          </div>\n          <button onClick={removeNomination} index={index} className=\"nominate\">Remove nomination</button>\n        </li>\n      );\n    });\n  }\n}\n\nexport default Nominated;","import firebase from 'firebase/app';\nimport 'firebase/database';\n\n// Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDht736HropBXtwFbjFpGLxigfknVO9_wQ\",\n  authDomain: \"shoppies-20c2e.firebaseapp.com\",\n  databaseURL: \"https://shoppies-20c2e.firebaseio.com\",\n  projectId: \"shoppies-20c2e\",\n  storageBucket: \"shoppies-20c2e.appspot.com\",\n  messagingSenderId: \"790626284069\",\n  appId: \"1:790626284069:web:04b886975bf2f4209d45cc\"\n};\nfirebase.initializeApp(firebaseConfig);\n\n// this exports the CONFIGURED version of firebase\nexport default firebase;","import React from \"react\";\nimport firebase from './firebase';\nimport Swal from 'sweetalert2';\n\nfunction Save({ nominated, setNominated }) {\n\n  // Push saved movie nominations to firebase\n  const saveNominations = () => {\n    const dbRef = firebase.database().ref();\n    nominated.map((movie) => {\n      return dbRef.push({\n        Poster: movie.Poster,\n        Title: movie.Title,\n        Year: movie.Year,\n        Plot: movie.Plot\n      })\n    })\n    setNominated([]);\n    // Sweet alert\n    Swal.fire({\n      title: 'Nominations saved!',\n      text: 'Make sure to check out the official list of nominees!',\n      confirmButtonText: 'Ok',\n    }).then(function () {\n      window.location.reload();\n    })\n  }\n\n  // When a movie is nominated, display a button to save nominations and push to firebase\n  if (!nominated.length) {\n    return null;\n  } else {\n    return (\n      <button onClick={saveNominations}>Save nominations!</button>\n    );\n  }\n}\n\nexport default Save;","import React, { useState } from \"react\";\nimport SearchResults from './SearchResults';\nimport Nominated from './Nominated';\nimport { Link } from \"react-router-dom\";\nimport Save from './Save';\n\nfunction Main () {\n  const [movie, setMovie] = useState({});\n  const [searched, setQuery] = useState({});\n  const [inputValue, setInputValue] = useState(\"\");\n  const [nominated, setNominated] = useState([]);\n\n  // API call\n  const performSearch = (query = `${searched}`) => {\n    fetch(`https://www.omdbapi.com/?type=movie&t=${query}&apikey=2b4018f5`)\n      .then(response => response.json())\n      .then(res => setMovie(res))\n  }\n\n  // As text input content changes, update API search query and make API call\n  const handleChange = (event) => {\n    setQuery(event.target.value)\n    setInputValue(event.target.value)\n    performSearch(event.target.value);\n  }\n\n  // If user has nominated 5 movies, prevent them from searching for more.\n  if (nominated.length === 5) {\n    return (\n      <main>\n        <div className=\"wrapper\">\n          <div className=\"centerWrapper\">\n            <h2>Welcome to The Shoppies, Shopify's official movie awards! Search for and nominate up to five movies, and check out the list of nominees!</h2>\n          </div>\n          <h3 className=\"maximum\">You've nominated five movies!</h3>\n          <div className=\"saveContainer\">\n            <Save nominated={nominated} setNominated={setNominated} />\n          </div>\n          <Link to=\"/nominations\" className=\"link\">View nominees <span><i class=\"fas fa-arrow-right\"></i></span></Link>\n          <ul className=\"nominations\" id=\"nominations\">\n            {/* Nominations go here */}\n            <Nominated nominated={nominated} setNominated={setNominated} />\n          </ul>\n          <div className=\"saveContainer\">\n            <Save nominated={nominated} setNominated={setNominated} />\n          </div>\n        </div>\n      </main>\n    );\n    // If user has nominated less than 5 movies, allow them to continue to nominate more.\n  } else {\n    return (\n      <main>\n        <div className=\"wrapper\">\n          <div className=\"centerWrapper\">\n            <h2>Welcome to The Shoppies, Shopify's official movie awards! Search for and nominate up to five movies, and check out the list of nominees!</h2>\n          </div>\n          <Link to=\"/nominations\" className=\"link\">View nominees <span><i className=\"fas fa-arrow-right\"></i></span></Link>\n          <div className=\"centerWrapper\">\n          <form action=\"#\">\n            <label htmlFor=\"movieTitle\" className=\"sr-only\">Movie title:</label>\n            <input onChange={handleChange} type=\"text\" name=\"movieTitle\" className=\"movieTitle\" id=\"movieTitle\" placeholder=\"Type a movie title\" />\n            </form>\n          </div>\n          <ul className=\"results\" id=\"results\">\n            {/* Search results go here */}\n            <SearchResults Poster={movie.Poster} Title={movie.Title} Year={movie.Year} Plot={movie.Plot} inputValue={inputValue} nominated={nominated} setNominated={setNominated} searched={searched} />\n          </ul>\n          <div className=\"saveContainer\">\n            <Save nominated={nominated} setNominated={setNominated} />\n          </div>\n          <ul className=\"nominations\" id=\"nominations\">\n            {/* Nominations go here */}\n            <Nominated nominated={nominated} setNominated={setNominated} />\n          </ul>\n          <div className=\"saveContainer\">\n            <Save nominated={nominated} setNominated={setNominated} />\n          </div>\n        </div>\n      </main>\n    );\n  }\n};\n\nexport default Main;","import React, { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport firebase from './firebase';\n\nfunction Nominations() {\n\n  const [savedNominations, setSavedNominations] = useState([]);\n  const mountedRef = useRef(true);\n\n  // Pull saved movie nominations from firebase\n  useEffect(() => {\n    const dbRef = firebase.database().ref();\n      dbRef.on('value', (response) => {\n        const newState = [];\n        const data = response.val();\n        for (let key in data) {\n          if (!mountedRef.current) return null;\n          newState.push(data[key]);\n        }\n        setSavedNominations(newState);\n        mountedRef.current = false\n      });\n  }, []);\n\n  return (\n    <>\n      <main>\n        <div className=\"wrapper\">\n          <Link to=\"/shoppies\" className=\"link2\"><span><i className=\"fas fa-arrow-left\"></i></span> Back</Link>\n          <h3 className=\"awardNominees\">Award nominees:</h3>\n          <ul className=\"nominations\">\n            {/* Saved nominations go here */}\n            {savedNominations.map((movie, index) => {\n            return (\n              <li key={index} className=\"movie\">\n                <div className=\"imgContainer\">\n                  <img src={movie.Poster} alt={movie.Title} />\n                </div>\n                <div className=\"movieText\">\n                  <p><span className=\"info\">Title</span>: {movie.Title}</p>\n                  <p><span className=\"info\">Year</span>: {movie.Year}</p>\n                  <p><span className=\"info\">Plot</span>: {movie.Plot}</p>\n                </div>\n              </li>\n            )\n          })}\n          </ul>\n          <Link to=\"/shoppies\" className=\"link2\"><span><i className=\"fas fa-arrow-left\"></i></span> Back</Link>\n        </div>\n      </main>\n    </>\n  );\n}\n\nexport default Nominations;","import React from 'react';\n\nfunction Footer() {\n  return (\n      <footer>\n        <div className=\"wrapper\">\n        <p><a href=\"https://lucassilbernagel.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Lucas Silbernagel</a> <i className=\"far fa-copyright\" aria-label=\"copyright\"></i> 2020</p>\n        <p> Data provided by <a href=\"http://www.omdbapi.com/\" target=\"_blank\" rel=\"noopener noreferrer\">OMDb API</a></p>\n        </div>\n      </footer>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport './App.scss';\nimport Header from './Components/Header';\nimport Main from './Components/Main';\nimport Nominations from './Components/Nominations'\nimport Footer from './Components/Footer';\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n      <Header />      \n      <Switch>\n        <Route exact path=\"/shoppies\" component={Main} />\n        <Route path=\"/nominations\" component={Nominations} />\n      </Switch>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}